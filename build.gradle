buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.2.2"
    }
}

plugins {
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.7.3"
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    apply plugin: 'com.android.library'
    apply plugin: 'com.jfrog.bintray'
}

version = "${VERSION_NAME}"
group = "${GROUP}"

android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 33
        versionCode 1
        versionName "${VERSION_NAME}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.4.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.addBooleanOption('Xdoclint:none', true)
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
if ( project.rootProject.file('local.properties').isFile() ) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
	println 'Bintray user: ' + user
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'zimdroid'
        licenses = ['Apache-2.0']
        version {
            name = "${VERSION_NAME}"
        }
        publish = true
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = "${GROUP}"
                artifactId = 'zimdroid'
                version = "${VERSION_NAME}"
            }
            debug(MavenPublication) {
                from components.debug

                groupId = "${GROUP}"
                artifactId = 'zimdroid-debug'
                version = "${VERSION_NAME}"
            }
        }
    }
}
